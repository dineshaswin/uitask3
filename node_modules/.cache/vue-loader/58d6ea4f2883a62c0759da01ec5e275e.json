{"remainingRequest":"/home/swathidinesh/ui-task3-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/swathidinesh/ui-task3-master/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/home/swathidinesh/ui-task3-master/src/views/Home.vue","mtime":1607334973832},{"path":"/home/swathidinesh/ui-task3-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/swathidinesh/ui-task3-master/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/swathidinesh/ui-task3-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/swathidinesh/ui-task3-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}